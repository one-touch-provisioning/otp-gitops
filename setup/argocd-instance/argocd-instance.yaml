apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops-otp
  namespace: openshift-gitops
spec:
  controller:
    processors: {}
    resources:
      limits:
        cpu: 2000m
        memory: 2048Mi
      requests:
        cpu: 250m
        memory: 1024Mi
    sharding: {}
  sso:
    provider: dex
    dex:
      openShiftOAuth: true
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
    env:
    - name: KUSTOMIZE_PLUGIN_HOME
      value: /etc/kustomize/plugin
    initContainers:
    - args:
      - -c
      - cp /etc/kustomize/plugin/policy.open-cluster-management.io/v1/policygenerator/PolicyGenerator
        /policy-generator/PolicyGenerator
      command:
      - /bin/bash
      image: registry.redhat.io/rhacm2/multicluster-operators-subscription-rhel8:v2.7
      name: policy-generator-install
      volumeMounts:
      - mountPath: /policy-generator
        name: policy-generator
    volumeMounts:
    - mountPath: /etc/kustomize/plugin/policy.open-cluster-management.io/v1/policygenerator
      name: policy-generator
    volumes:
    - emptyDir: {}
      name: policy-generator
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    insecure: true
    replicas: 1
    route:
      enabled: true
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
    service:
      type: ''
  grafana:
    enabled: false
    size: 1
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi    
    route:
      enabled: false
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  initialSSHKnownHosts: {}
  applicationSet:
    resources:
      limits:
        cpu: '2'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  rbac:
    defaultPolicy: 'role:admin'
    policy: |
      g, system:cluster-admins, role:admin
      g, admin, role:admin
    scopes: '[groups]'
  tls:
    ca: {}
  kustomizeBuildOptions: --enable-alpha-plugins
  resourceExclusions: |
    - apiGroups:
      - internal.open-cluster-management.io
      kinds:
      - ManagedClusterInfo
      clusters:
      - "*"
    - apiGroups:
      - clusterview.open-cluster-management.io
      kinds:
      - ManagedCluster
      clusters:
      - "*"
    - apiGroups:
      - view.open-cluster-management.io
      kinds:
      - ManagedClusterView
      clusters:
      - "*"
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
#  nodePlacement:
#    tolerations:
#      - effect: NoSchedule
#        key: node-role.kubernetes.io/infra
#        operator: Exists
#      - effect: NoExecute
#        key: node-role.kubernetes.io/infra
#        operator: Exists
